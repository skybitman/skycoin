{"version":3,"sources":["app/app.loadWallet.ts"],"names":[],"mappings":"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","file":"app.loadWallet.js","sourcesContent":["import {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {ROUTER_DIRECTIVES} from \"@angular/router\";\nimport {Http, Response, Headers} from \"@angular/http\";\nimport {Observable as ObservableRx} from \"rxjs/Rx\";\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/operator/catch\";\nimport {QRCodeComponent} from \"./ng2-qrcode\";\nimport {SkyCoinEditComponent} from \"./components/skycoin.edit.component\";\nimport {SeedComponent} from \"./components/seed.component\";\nimport {SkyCoinOutputComponent} from \"./components/outputs.component\";\nimport {PendingTxnsComponent} from \"./components/pending.transactions.component\";\nimport {WalletBackupPageComponent} from \"./components/wallet.backup.page.component\";\nimport {SkycoinSyncWalletBlock} from \"./components/progress.bannner.component\";\n\ndeclare var _: any;\ndeclare var $: any;\ndeclare var async: any;\ndeclare var moment: any;\ndeclare var toastr: any;\n\nexport class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 5) {\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = _.range(startPage, endPage + 1);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n\n@Component({\n    selector: 'load-wallet',\n    directives: [ROUTER_DIRECTIVES, QRCodeComponent, SeedComponent, SkycoinSyncWalletBlock, SkyCoinEditComponent, SkyCoinOutputComponent, PendingTxnsComponent, WalletBackupPageComponent],\n    providers: [PagerService],\n    templateUrl: 'app/templates/wallet.html'\n})\n\nexport class LoadWalletComponent implements OnInit {\n    //Declare default varialbes\n    wallets : Array<any>;\n    walletsWithAddress : Array<any>;\n    progress: any;\n    spendid: string;\n    spendaddress: string;\n    sendDisable: boolean;\n    readyDisable: boolean;\n    displayMode: DisplayModeEnum;\n    displayModeEnum = DisplayModeEnum;\n    selectedMenu: string;\n    historyTimeBy:string = 'desc';\n    userTransactions:Array<any>;\n\n    @ViewChild(SkyCoinOutputComponent)\n    private outputComponent: SkyCoinOutputComponent;\n\n    @ViewChild(PendingTxnsComponent)\n    private pendingTxnComponent: PendingTxnsComponent;\n\n    @ViewChild('spendaddress')\n    private spendAddress:any;\n\n    @ViewChild('walletname')\n    private walletNameInLoadWallet:any;\n\n    @ViewChild('walletseed')\n    private walletSeedInLoadWallet:any;\n\n    @ViewChild('spendamount')\n    private spendAmount:any;\n\n    @ViewChild('transactionNote')\n    private transactionNote:any;\n\n    QrAddress: string;\n    QrIsVisible: boolean;\n\n    @ViewChild(SeedComponent)\n    private seedComponent: SeedComponent;\n\n    NewWalletIsVisible: boolean;\n    loadSeedIsVisible: boolean;\n\n    walletname: string;\n    walletId: string;\n\n    historyTable: Array<any>;\n    pendingTable: Array<any>;\n    addresses: Array<any>;\n    connections: Array<any>;\n    defaultConnections: Array<any>;\n    blockChain: any;\n    elapsedTime: number;\n    numberOfBlocks: number;\n    outputs: Array<any>;\n    NewDefaultConnectionIsVisible : boolean;\n    EditDefaultConnectionIsVisible : boolean;\n    noConnections:boolean;\n    oldConnection:string;\n    filterAddressVal:string;\n    totalSky:any;\n    totalWalletBalance:any;\n    historySearchKey:string;\n    selectedWallet:any;\n\n    sortDir:{};\n    isValidAddress: boolean;\n\n    blockViewMode:string;\n    selectedBlock: any = {};\n    selectedBlockTransaction:any = {};\n    selectedBlockAddress:string;\n    selectedBlockAddressBalance:any = 0;\n    selectedBlackAddressTxList: any = [];\n\n    // pager object\n    historyPager: any = {};\n    historyPagedItems: any[];\n\n    blockPager: any = {};\n    blockPagedItems: any[];\n\n    //Constructor method for load HTTP object\n    constructor(private http: Http, private pagerService: PagerService) { }\n\n    //Init function for load default value\n    ngOnInit() {\n        this.displayMode = DisplayModeEnum.first;\n        this.totalSky = 0;\n        this.totalWalletBalance =0;\n        this.selectedWallet = {};\n        this.userTransactions=[];\n        this.loadWallet();\n        this.loadConnections();\n        this.loadDefaultConnections();\n        this.loadBlockChain();\n        this.loadNumberOfBlocks();\n        this.loadProgress();\n        this.isValidAddress = false;\n        this.blockViewMode = 'recentBlocks'\n\n        //Set interval function for load wallet every 15 seconds\n        setInterval(() => {\n            this.loadWallet();\n        }, 30000);\n        setInterval(() => {\n            this.loadConnections();\n            this.loadBlockChain();\n            this.loadNumberOfBlocks();\n            //console.log(\"Refreshing connections\");\n        }, 15000);\n\n        //Enable Send tab \"textbox\" and \"Ready\" button by default\n        this.sendDisable = true;\n        this.readyDisable = false;\n        this.pendingTable = [];\n        this.selectedMenu = \"Wallets\";\n        this.sortDir = {time:0, amount:0, address:0};\n        this.filterAddressVal = '';\n        this.historySearchKey = '';\n\n        if(localStorage.getItem('historyAddresses') != null){\n            this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n        } else {\n            localStorage.setItem('historyAddresses',JSON.stringify([]));\n            this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n        }\n\n        /*$(\"#walletSelect\").select2({\n         templateResult: function(state) {\n         return state.text;\n         /!*if (!state.id) { return state.text; }\n         var $state = $(\n         '<span><img src=\"vendor/images/flags/' + state.element.value.toLowerCase() + '.png\" class=\"img-flag\" /> ' + state.text + '</span>'\n         );\n         return $state;*!/\n         }\n         });*/\n    }\n\n    //Ready button function for disable \"textbox\" and enable \"Send\" button for ready to send coin\n    ready(spendId, spendaddress, spendamount){\n        if(!spendId){\n            toastr.error(\"Please select from id\");\n            return false;\n        }\n        if(!spendaddress){\n            toastr.error(\"Please enter pay to\");\n            return false;\n        }\n        if(!spendamount){\n            toastr.error(\"Please enter amount\");\n            return false;\n        }\n        this.readyDisable = true;\n        this.sendDisable = false;\n    }\n\n    loadNumberOfBlocks(){\n        this.numberOfBlocks=0;\n        this.http.get('/blockchain/metadata')\n        .map((res:Response)=>res.json())\n        .subscribe(\n            data=>{\n                this.numberOfBlocks = data.head.seq;\n            }\n        )\n    }\n\n    loadTransactionsForWallet(){\n        let addresses=[];\n\n        this.userTransactions=[];\n\n        _.each(this.wallets,(wallet)=>{\n            _.each(wallet.entries,(entry)=>{\n                addresses.push(entry.address);\n            });\n        });\n\n\n        _.each(addresses,(address)=>{\n            this.http.get('/explorer/address?address='+address, {})\n            .map((res) => res.json())\n            .subscribe(transactions => {\n                _.each(transactions,(transaction)=>{\n                    let confirmed = transaction.status.confirmed? 'Confirmed': 'UnConfirmed'\n                    this.userTransactions.push({'type':'confirmed','transactionInputs':transaction.inputs,'transactionOutputs':transaction.outputs\n                        ,'actualTransaction':transaction, 'confirmed': confirmed\n                    });\n                    this.sortTransactions();\n                });\n            });\n        });\n    }\n    sortHistoryByTime(ev:Event) {\n        this.historyTimeBy = this.historyTimeBy === 'desc' ? 'asc' : 'desc';\n        this.sortTransactions()\n    }\n    sortTransactions() {\n        if(this.userTransactions.length <= 0) {\n            return;\n        }\n        switch (this.historyTimeBy) {\n            case 'asc':\n                this.userTransactions.sort((a, b) => {\n                    if (a.actualTransaction.timestamp > b.actualTransaction.timestamp) {\n                        return 1;\n                    }\n                    if (a.actualTransaction.timestamp < b.actualTransaction.timestamp) {\n                        return -1;\n                    }\n                    return 0;\n                });\n                break;\n            case 'desc':\n                 this.userTransactions.sort((a, b) => {\n                    if (a.actualTransaction.timestamp > b.actualTransaction.timestamp) {\n                        return -1;\n                    }\n                    if (a.actualTransaction.timestamp < b.actualTransaction.timestamp) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                break;\n        }\n    }\n\n    //Load wallet function\n    loadWallet(){\n        this.totalWalletBalance = 0;\n        this.http.post('/wallets', '')\n        .map((res:Response) => res.json())\n        .subscribe(\n            data => {\n                if(this.wallets == null || this.wallets.length == 0) {\n                    _.each(data, (o)=>{\n                        o.showChild = false;\n                    })\n                    this.wallets = data;\n                    if (this.wallets.length > 0) {\n                        this.onSelectWallet(this.wallets[0].meta.filename);\n                    }\n                } else {\n                    data.map((w)=>{\n                        var old = _.find(this.wallets, (o)=>{\n                            return o.meta.filename === w.meta.filename;\n                        })\n\n                        if(old) {\n                            _.extend(old, w);\n                        } else {\n                            w.showChild = false;\n                            this.wallets.push(w);\n                        }\n                    })\n                }\n\n                //console.log(\"this.wallets\", this.wallets);\n\n                //Load Balance for each wallet\n                //var inc = 0;\n                //console.log(\"data\", data);\n                _.map(data, (item, idx) => {\n                    var filename = item.meta.filename;\n                    this.loadWalletItem(filename, idx,idx ==  data.length-1);\n                })\n                this.walletsWithAddress = [];\n                _.map(this.wallets, (o, idx) => {\n                    this.walletsWithAddress.push({\n                        wallet:o,\n                        type:'wallet'\n                    });\n                    _.map(o.entries, (_o, idx) => {\n                        this.walletsWithAddress.push({\n                            entry:_o,\n                            type:'address',\n                            wallet:o,\n                            idx:idx==0?'':'(' + idx + ')'\n                        });\n                    });\n                });\n                this.loadTransactionsForWallet();\n            },\n            err => console.log(err),\n            () => {\n                //console.log('Wallet load done')\n            }\n        );\n    }\n    checkValidAddress(address) {\n        if(address === \"\") {\n            this.isValidAddress = false;\n        } else {\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            this.http.get('/balance?addrs=' + address, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                //Response from API\n                response => {\n                    this.isValidAddress = true;\n                }, err => {\n                    //console.log(\"Error on load balance: \" + err)\n                    this.isValidAddress = false;\n                }, () => {\n\n                })\n        }\n    }\n    loadWalletItem(address, inc, endReached){\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/wallet/balance?id=' + address, { headers: headers })\n        .map((res) => res.json())\n        .subscribe(\n            //Response from API\n            response => {\n                //console.log('load done: ' + inc, response);\n                this.wallets[inc].balance = response.confirmed.coins / 1000000;\n                this.totalWalletBalance += this.wallets[inc].balance;\n                if(endReached){\n                   if(this.totalSky != this.totalWalletBalance) {\n                       this.totalSky = this.totalWalletBalance;\n                       console.log(\"Updating the wallet balance!\");\n                   }\n                   else{\n                       console.log(\"Not updating the wallet balance as it is the same!\");\n                   }\n                }\n            }, err => console.log(\"Error on load balance: \" + err), () => {\n                //console.log('Balance load done')\n            })\n        //get address balances\n        this.wallets[inc].entries.map((entry)=>{\n            this.http.get('/balance?addrs=' + entry.address, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                //Response from API\n                response => {\n                    //console.log('balance:' + entry.address, response);\n                    entry.balance = response.confirmed.coins / 1000000;\n                }, err => console.log(\"Error on load balance: \" + err), () => {\n                    //console.log('Balance load done')\n                })\n        })\n    }\n    loadConnections() {\n        this.http.post('/network/connections', '')\n        .map((res) => res.json())\n        .subscribe(data => {\n            //console.log(\"connections\", data);\n            this.connections = data.connections;\n        }, err => console.log(\"Error on load connection: \" + err), () => {\n            //console.log('Connection load done')\n        });\n    }\n    loadTransactions() {\n        this.historyTable = [];\n        this.http.get('/lastTxs', {})\n        .map((res) => res.json())\n        .subscribe(data => {\n            console.log(\"transactions\", data);\n            this.historyTable = this.historyTable.concat(data);\n            this.setHistoryPage(1);\n        }, err => console.log(\"Error on load transactions: \" + err), () => {\n            //console.log('Connection load done')\n        });\n        this.http.get('/pendingTxs', {})\n        .map((res) => res.json())\n        .subscribe(data => {\n            console.log(\"pending transactions\", data);\n            this.historyTable = this.historyTable.concat(data);\n            this.setHistoryPage(1);\n        }, err => console.log(\"Error on pending transactions: \" + err), () => {\n\n        });\n    }\n    GetTransactionAmount(transaction) {\n        var ret = 0;\n        _.each(transaction.outputs, function(o){\n            ret += Number(o.coins);\n        })\n\n        return ret;\n    }\n    GetTransactionAmount2(transaction) {\n        var ret = 0;\n        _.each(transaction.outputs, function(o){\n            ret += Number(o.coins);\n        })\n\n        return ret;\n    }\n    GetBlockAmount(block) {\n        var ret = [];\n        _.each(block.body.txns, function(o){\n            _.each(o.outputs, function(_o){\n                ret.push(_o.coins);\n            })\n        })\n\n        return ret.join(\",\");\n    }\n    GetBlockTotalAmount(block) {\n        var ret = 0;\n        _.each(block.body.txns, function(o){\n            _.each(o.outputs, function(_o){\n                ret += Number(_o.coins);\n            })\n        })\n\n        return ret;\n    }\n    loadDefaultConnections() {\n        this.http.post('/network/defaultConnections', '')\n        .map((res) => res.json())\n        .subscribe(data => {\n            //console.log(\"default connections\", data);\n            this.defaultConnections = data;\n        }, err => console.log(\"Error on load default connection: \" + err), () => {\n            //console.log('Default connections load done')\n        });\n    }\n\n    loadBlockChain() {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/last_blocks?num=10', { headers: headers })\n        .map((res) => res.json())\n        .subscribe(data => {\n            //console.log(\"blockchain\", data);\n            this.blockChain = _.sortBy(data.blocks, function(o){\n                return o.header.seq * (-1);\n            });\n\n            if (this.blockChain.length != 0) {\n                this.elapsedTime = moment().unix() - this.blockChain[0].header.timestamp;\n            }\n\n            this.setBlockPage(1);\n        }, err => console.log(\"Error on load blockchain: \" + err), () => {\n            //console.log('blockchain load done');\n        });\n    }    //Load progress function for Skycoin\n    loadProgress(){\n        //Post method executed\n        this.http.post('/blockchain/progress', '')\n        .map((res:Response) => res.json())\n        .subscribe(\n            //Response from API\n            response => { this.progress = (parseInt(response.current,10)+1) / parseInt(response.highest,10) * 100 },\n            err => console.log(\"Error on load progress: \"+err),\n            () => {\n                //console.log('Progress load done:' + this.progress)\n            }\n        );\n    }\n    toggleShowChild(wallet) {\n        wallet.showChild = !wallet.showChild;\n    }\n\n    //Switch tab function\n    switchTab(mode: DisplayModeEnum, wallet) {\n        this.selectedMenu = '';\n        //\"Textbox\" and \"Ready\" button enable in Send tab while switching tabs\n        this.sendDisable = true;\n        this.readyDisable = false;\n\n        this.displayMode = mode;\n        if(wallet){\n            this.spendid = wallet.meta.filename;\n            this.selectedWallet = _.find(this.wallets, function(o){\n                return o.meta.filename === wallet.meta.filename;\n            })\n            console.log(\"selected wallet\", this.spendid, this.selectedWallet);\n        }\n    }\n    selectMenu(menu, event) {\n        this.displayMode = this.displayModeEnum.fifth;\n        event.preventDefault();\n        this.selectedMenu = menu;\n        if(menu=='Outputs'){\n            if(this.outputComponent){\n                this.outputComponent.refreshOutputs();\n            }\n        }\n        if(menu == 'PendingTxns'){\n            if(this.pendingTxnComponent){\n                this.pendingTxnComponent.refreshPendingTxns();\n            }\n        }\n    }\n    getDateTimeString(ts) {\n        return moment.unix(ts).format(\"YYYY-MM-DD HH:mm\")\n    }\n    //Show QR code function for show QR popup\n    showQR(address){\n        this.QrAddress = address;\n        this.QrIsVisible = true;\n    }\n    //Hide QR code function for hide QR popup\n    hideQrPopup(){\n        this.QrIsVisible = false;\n    }\n\n    //Show wallet function for view New wallet popup\n    showNewWalletDialog(){\n        this.NewWalletIsVisible = true;\n    }\n    //Hide wallet function for hide New wallet popup\n    hideWalletPopup(){\n        this.NewWalletIsVisible = false;\n    }\n    showNewDefaultConnectionDialog(){\n        this.NewDefaultConnectionIsVisible = true;\n    }\n    hideNewDefaultConnectionDialog(){\n        this.NewDefaultConnectionIsVisible = false;\n    }\n    showEditDefaultConnectionDialog(item){\n        this.oldConnection = item;\n        this.EditDefaultConnectionIsVisible = true;\n    }\n    hideEditDefaultConnectionDialog(){\n        this.EditDefaultConnectionIsVisible = false;\n    }\n    createDefaultConnection(connectionValue){\n        //console.log(\"new value\", connectionValue);\n        this.defaultConnections.push(connectionValue);\n        this.NewDefaultConnectionIsVisible = false;\n    }\n    updateDefaultConnection(connectionValue){\n        //console.log(\"old/new value\", this.oldConnection, connectionValue);\n        var idx = this.defaultConnections.indexOf(this.oldConnection);\n        this.defaultConnections.splice(idx, 1);\n        this.defaultConnections.splice(idx, 0, connectionValue);\n        this.EditDefaultConnectionIsVisible = false;\n    }\n    deleteDefaultConnection(item){\n        var idx = this.defaultConnections.indexOf(item);\n        this.defaultConnections.splice(idx, 1);\n    }\n    //Add new wallet function for generate new wallet in Skycoin\n    createNewWallet(label, seed, addressCount){\n        if(addressCount < 1) {\n            //alert(\"Please input correct address count\");\n            toastr.error('Please input correct address count');\n            return;\n        }\n\n        // new wallet will have a default address\n        addressCount--;\n\n        //check if label is duplicated\n        var old = _.find(this.wallets, function(o){\n            return (o.meta.label == label)\n        })\n\n        if(old) {\n            toastr.error('This wallet label is used already.');\n            //alert(\"This wallet label is used already\");\n            return;\n        }\n\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        if(this.seedComponent){\n            seed=this.seedComponent.getCurrentSeed();\n        }\n        //Post method executed\n        var stringConvert = 'label='+label+'&seed='+seed;\n        this.http.post('/wallet/create', stringConvert, {headers: headers})\n        .map((res:Response) => res.json())\n        .subscribe(\n            response => {\n                console.log('response:', response);\n                if (addressCount > 0) {\n                    let param = 'id='+response.meta.filename+'&num='+addressCount\n                    this.http.post('/wallet/newAddress', param, {headers: headers})\n                    .map((res:Response) => res.json())\n                    .subscribe(\n                        response => {\n                            //Hide new wallet popup\n                            this.NewWalletIsVisible = false;\n                            toastr.info(\"New wallet created successfully\");\n                            //Load wallet for refresh list\n                            this.loadWallet();\n                        },\n                        err => {\n                            console.log(err);\n                        }\n                    );\n                    return\n                }\n\n                //Hide new wallet popup\n                this.NewWalletIsVisible = false;\n                toastr.info(\"New wallet created successfully\");\n                //Load wallet for refresh list\n                this.loadWallet();\n            },\n            err => {\n                // when node is down, the response header status is 200\n                if (err.status == 200) {\n                    return\n                }\n\n                if (err.status == 400) {\n                    if(err._body.indexOf(\"duplicate wallet \") !=-1){\n                        toastr.info(\"Can't load same wallet twice!\");\n                    }\n                }\n            },\n            () => {}\n        );\n    }\n\n    addNewAddress(wallet) {\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n        //Post method executed\n        var stringConvert = 'id='+wallet.meta.filename;\n        this.http.post('/wallet/newAddress', stringConvert, {headers: headers})\n        .map((res:Response) => res.json())\n        .subscribe(\n            response => {\n                console.log(response)\n                toastr.info(\"New address created successfully\");\n                //Load wallet for refresh list\n                this.loadWallet();\n            },\n            err => {\n                console.log(err);\n            },\n            () => {}\n        );\n    }\n\n    //Load wallet seed function\n    openLoadWallet(walletName, seed){\n        this.loadSeedIsVisible = true;\n    }\n    //Hide load wallet seed function\n    hideLoadSeedWalletPopup(){\n        this.loadSeedIsVisible = false;\n    }\n\n    //Load wallet seed function for create new wallet with name and seed\n    createWalletSeed(walletName, seed, addressCount){\n        if(addressCount < 1) {\n            toastr.error('Please correct address count');\n            return;\n        }\n\n        addressCount--;\n\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var stringConvert = 'label='+walletName+'&seed='+seed;\n        //Post method executed\n        this.http.post('/wallet/create', stringConvert, {headers: headers})\n        .map((res:Response) => res.json())\n        .subscribe(\n            response => {\n                if(addressCount > 0) {\n                    let params='id=' + response.meta.filename + '&num=' + addressCount;\n                    this.http.post('/wallet/newAddress', params, {headers: headers})\n                    .map((res:Response) => res.json())\n                    .subscribe(\n                        response => {\n                            //Hide new wallet popup\n                            this.loadSeedIsVisible = false;\n                            toastr.info(\"Wallet loaded successfully\");\n                            //Load wallet for refresh list\n                            this.loadWallet();\n                        },\n                        err => {\n                            console.log(err);\n                        },\n                        () => {}\n                    );\n                    return\n                } \n\n                //Hide new wallet popup\n                this.loadSeedIsVisible = false;\n                toastr.info(\"Wallet loaded successfully\");\n                //Load wallet for refresh list\n                this.loadWallet();\n            },\n            err => {\n                // when node is down, the response header status is 200\n                if (err.status == 200) {\n                    return\n                }\n\n                if (err.status == 400) {\n                    if(err._body.indexOf(\"duplicate wallet \") !=-1){\n                        toastr.info(\"Can't load same wallet twice!\");\n                    }\n                }\n            },\n            () => {\n            }\n        );\n    }\n\n    filterHistory(address) {\n        console.log(\"filterHistory\", address);\n        this.filterAddressVal = address;\n    }\n\n    updateStatusOfTransaction(txid, metaData){\n\n        let self= this;\n        let transactionConfirmed = false;\n\n        ObservableRx.timer(0,1000).map((i)=>{\n            if(transactionConfirmed){\n                throw new Error(\"Transaction confirmed\");\n            }\n\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n            this.http.get('/transaction?txid=' + txid, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                res => {\n                    transactionConfirmed = res.status.confirmed;\n                    self.pendingTable=[];\n                    self.pendingTable.push({'time':res.txn.timestamp,'status':res.status.confirmed?'Completed':'Unconfirmed','amount':metaData.amount,'txId':txid,'address':metaData.address});\n                    self.loadWallet();\n                }, err => {\n                    console.log(\"Error on load transaction: \" + err)\n                }, () => {\n                });\n        }).subscribe(()=>{\n\n        },(err)=>{\n            console.log(\"Transaction confirmed\");\n        });\n\n\n    }\n\n    spend(spendid, spendaddress, spendamount){\n        var amount = Number(spendamount);\n        if(amount < 1) {\n            toastr.error('Cannot send values less than 1.');\n            return;\n        }\n\n        //this.historyTable.push({address:spendaddress, amount:spendamount, time:Date.now()/1000});\n        //localStorage.setItem('historyTable',JSON.stringify(this.historyTable));\n\n        var oldItem = _.find(this.addresses, function(o){\n            return o.address === spendaddress;\n        })\n\n        if(!oldItem) {\n            this.addresses.push({address:spendaddress, amount:spendamount});\n            localStorage.setItem('historyAddresses',JSON.stringify(this.addresses));\n        }\n\n        this.readyDisable = true;\n        this.sendDisable = true;\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var stringConvert = 'id='+spendid+'&coins='+spendamount*1000000+\"&fee=1&hours=1&dst=\"+spendaddress;\n        //Post method executed\n        var self = this;\n        this.http.post('/wallet/spend', stringConvert, {headers: headers})\n        .map((res:Response) => res.json())\n        .subscribe(\n            response => {\n                console.log(response);\n                this.updateStatusOfTransaction(response.txn.txid, {address:spendaddress,amount:amount});\n                this.readyDisable = false;\n                this.sendDisable = true;\n                self.spendAddress.nativeElement.value = '';\n                self.spendAmount.nativeElement.value =0;\n                self.transactionNote.nativeElement.value = '';\n                self.isValidAddress=false;\n            },\n            err => {\n\n\n\n                this.readyDisable = false;\n                this.sendDisable = true;\n                var logBody = err._body;\n                if(logBody == 'Invalid \"coins\" value') {\n                    toastr.error('Incorrect amount value.');\n                    return;\n                } else if (logBody == 'Invalid connection') {\n                    toastr.error(logBody);\n                    return;\n                } else {\n                    var logContent = JSON.parse(logBody.substring(logBody.indexOf(\"{\")));\n                    toastr.error(logContent.error);\n                }\n\n                //this.pendingTable.push({complete: 'Pending', address: spendaddress, amount: spendamount});\n            },\n            () => {\n                self.spendAddress.nativeElement.value = '';\n                self.spendAmount.nativeElement.value =0;\n                self.transactionNote.nativeElement.value = '';\n                self.isValidAddress=false;\n                $(\"#send_pay_to\").val(\"\");\n                $(\"#send_amount\").val(0);\n            }\n        );\n    }\n\n    setHistoryPage(page: number) {\n        this.historyPager.totalPages = this.historyTable.length;\n\n        if (page < 1 || page > this.historyPager.totalPages) {\n            return;\n        }\n\n        // get pager object from service\n        this.historyPager = this.pagerService.getPager(this.historyTable.length, page);\n\n        console.log(\"this.historyPager\", this.historyPager );\n        // get current page of items\n        this.historyPagedItems = this.historyTable.slice(this.historyPager.startIndex, this.historyPager.endIndex + 1);\n        //console.log('this.pagedItems', this.historyTable, this.pagedItems);\n    }\n\n    setBlockPage(page: number) {\n        this.blockPager.totalPages = this.blockChain.length;\n\n        if (page < 1 || page > this.blockPager.totalPages) {\n            return;\n        }\n\n        // get pager object from service\n        this.blockPager = this.pagerService.getPager(this.blockChain.length, page);\n\n        // get current page of items\n        this.blockPagedItems = this.blockChain.slice(this.blockPager.startIndex, this.blockPager.endIndex + 1);\n        //console.log(\"this.blockPagedItems\", this.blockPagedItems);\n    }\n\n    searchHistory(searchKey){\n        console.log(searchKey);\n\n    }\n\n    searchBlockHistory(searchKey){\n        console.log(searchKey);\n\n    }\n\n    onSelectWallet(val) {\n        console.log(\"onSelectWallet\", val);\n        //this.selectedWallet = val;\n        this.spendid = val;\n        this.selectedWallet = _.find(this.wallets, function(o){\n            return o.meta.filename === val;\n        })\n    }\n\n    showBlockDetail(block) {\n        //change viewMode as blockDetail\n        this.blockViewMode = 'blockDetail';\n        this.selectedBlock = block;\n    }\n\n    showRecentBlock() {\n        this.blockViewMode = 'recentBlocks';\n    }\n\n    showBlockTransactionDetail(txns) {\n        this.blockViewMode = 'blockTransactionDetail';\n        this.selectedBlockTransaction = txns;\n    }\n\n    showTransactionDetail(txId) {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/transaction?txid=' + txId, { headers: headers })\n        .map((res) => res.json())\n        .subscribe(\n            //Response from API\n            response => {\n                console.log(response);\n                this.blockViewMode = 'blockTransactionDetail';\n                this.selectedBlockTransaction = response.txn;\n            }, err => {\n                console.log(\"Error on load transaction: \" + err)\n            }, () => {\n            })\n    }\n\n    showBlockAddressDetail(address) {\n        this.blockViewMode = 'blockAddressDetail';\n        this.selectedBlockAddress = address;\n\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var txList = [];\n        async.parallel([\n            (callback)=>{\n                this.http.get('/balance?addrs=' + address, { headers: headers })\n                .map((res) => res.json())\n                .subscribe(\n                    //Response from API\n                    response => {\n                        //console.log(response);\n                        this.selectedBlockAddressBalance = response.confirmed.coins/1000000;\n                        callback(null, null);\n                    }, err => {\n                        callback(err, null);\n                        //console.log(\"Error on load balance: \" + err)\n                    }, () => {\n                    })\n            },\n            (callback) => {\n                this.http.get('/address_in_uxouts?address=' + address, { headers: headers })\n                .map((res) => res.json())\n                .subscribe(\n                    //Response from API\n                    response => {\n                        console.log(\"address_in_uxouts\", response);\n                        _.map(response, (o)=>{\n                            o.type = 'in';\n                            txList.push(o)\n                        });\n                        callback(null, null);\n                    }, err => {\n                        callback(err, null);\n                        //console.log(\"Error on load balance: \" + err)\n                    }, () => {\n                    })\n            },\n            (callback) => {\n                this.http.get('/address_out_uxouts?address=' + address, { headers: headers })\n                .map((res) => res.json())\n                .subscribe(\n                    //Response from API\n                    response => {\n                        console.log(\"address_out_uxouts\", response);\n                        _.map(response, (o)=>{\n                            o.type = 'out';\n                            txList.push(o)\n                        });\n                        callback(null, null);\n                    }, err => {\n                        callback(err, null);\n                        //console.log(\"Error on load balance: \" + err)\n                    }, () => {\n                    })\n            }\n        ], (err, rets)=>{\n            console.log(err, rets);\n            this.selectedBlackAddressTxList = _.sortBy(txList, (o)=>{\n                return o.time;\n            })\n        })\n    }\n}\n\n//Set default enum value for tabs\nenum DisplayModeEnum {\n    first = 0,\n    second = 1,\n    third = 2,\n    fourth = 3,\n    fifth = 4\n}"]}